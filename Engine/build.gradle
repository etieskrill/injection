import org.jetbrains.kotlin.com.intellij.util.system.OS

plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm'
    id 'io.github.etieskrill.injection.shader.reflection'
    id 'io.github.etieskrill.injection.shader.dsl'
}

group = 'org.etieskrill.engine'
version = '1.0.0-SNAPSHOT'

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    //LWJGL native interfaces
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation 'org.lwjgl:lwjgl'
    implementation 'org.lwjgl:lwjgl-assimp'
    implementation 'org.lwjgl:lwjgl-freetype'
    implementation 'org.lwjgl:lwjgl-glfw'
    implementation 'org.lwjgl:lwjgl-opengl'
    implementation 'org.lwjgl:lwjgl-stb'
    implementation 'org.lwjgl:lwjgl-meshoptimizer'

    def arch = System.getProperty("os.arch").contains("aarch64") ? "-arm64" : ""
    switch (OS.CURRENT) {
        case OS.Windows:
            project.ext.lwjglNatives = "natives-windows$arch"
            break
        case OS.Linux:
            project.ext.lwjglNatives = "natives-linux$arch"
            break
    }

    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-freetype::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-meshoptimizer::$lwjglNatives"

    implementation "org.jetbrains:annotations:$jbAnnotationsVersion"
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    //OpenGL-oriented maths library
    api "org.joml:joml:$jomlVersion"
    api "org.joml:joml-primitives:$jomlPrimitivesVersion"

    implementation "org.yaml:snakeyaml:$snakeYamlVersion"

    //Logging
    api "org.slf4j:slf4j-api:$slf4jVersion" //FIXME compileOnlyApi? >:)
    runtimeOnly "org.slf4j:slf4j-simple:$slf4jVersion"
//    implementation "org.slf4j:slf4j-reload4j:2.0.17" //FIXME something about the build config is **REALLY** wrong

    //Test framework and libraries
    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
    testImplementation "org.hamcrest:hamcrest:$hamcrestVersion"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
}

test {
    useJUnitPlatform()
}